
// ~/Arduino/QIF/crc64.h Located in parent directory and linked in subdirectory

/*
┌───────────────────────────────────────────────────────────────┐
│                  CRC64 Definitions  (A.I. generated           │
└───────────────────────────────────────────────────────────────┘

1. ───── File identity & inclusion guard ───────────────────────
    - Located in parent directory (`~/Arduino/QIF/crc64.h`).
    - Ensures single inclusion with `#ifndef CRC64_H ... #endif`.

2. ───── CRC64 stream context struct ──────────────────────────
    - Defines `crc64_stream` structure to support streaming CRC64:
      * `crc` → running 64-bit CRC value.
      * `buffer[8]` → local 8-byte buffer for incremental updates.
      * `buffer_count` → tracks partial fill before processing full slices.

3. ───── CRC64 streaming API ──────────────────────────────────
    - Declares functions for incremental CRC64 calculation:
      * `crc64_stream_init()` → initializes CRC context with initial value.
      * `crc64_stream_update()` → processes buffer slices.
      * `crc64_stream_finalize()` → returns final 64-bit CRC value.

4. ───── CRC64 lookup table ───────────────────────────────────
    - Defines `crc64_table[256]` as a static global constant array.
    - Precomputed using:
      * Polynomial → ECMA-182 (0xC96C5795D7870F42).
      * Optimized for slice-by-8 processing (processes 8 bytes at a time).
    - Allows extremely fast computation of CRC64 by looking up values
      instead of bit-by-bit calculation.

5. ───── Typical usage ────────────────────────────────────────
    - Used to compute and verify firmware integrity in CAN FD / QSPI updates.
    - Example:
      ```cpp
      crc64_stream crc;
      crc64_stream_init(&crc, 0);
      crc64_stream_update(&crc, data, length);
      uint64_t final_crc = crc64_stream_finalize(&crc);
      ```
    - Matches firmware updater’s needs for verifying large blocks
      received over CAN FD or read from QSPI.

*/

#ifndef   CRC64_H
#define   CRC64_H

typedef struct {
  uint64_t crc;
  uint8_t buffer[8];
  size_t buffer_count;
} crc64_stream;

void crc64_stream_init(crc64_stream* ctx, uint64_t initial_crc);
void crc64_stream_update(crc64_stream* ctx, const uint8_t* data, size_t length);
uint64_t crc64_stream_finalize(crc64_stream* ctx);


// crc64_table(for 8-byte CRC64 processing)
// ECMA-182 polynomial: 0xC96C5795D7870F42
// Optimized for slice-by-8 algorithm (processes 8 bytes per iteration)
static uint64_t crc64_table[256] = {
    0x0000000000000000ULL, 0x7F6EF0C830358979ULL, 0xFEDDE190606B12F2ULL, 0x81B31158205E9B8BULL,
    0xC962E5739841B68FULL, 0xB60C15BBA8743FF6ULL, 0x37BF04E3F82AA47DULL, 0x48D1F42BC81F2D04ULL,
    0xA61CECB9F1826C1AULL, 0xD9721C71C1B7E563ULL, 0x58C10D2991E97EE8ULL, 0x27AFFDE1A1DCF791ULL,
    0x6F7E09CA19C3DA95ULL, 0x1010F90229F653ECULL, 0x91A3E85A79A8C867ULL, 0xEECD1892499D411EULL,
    0x1E8D8A67A304D8E9ULL, 0x61E37AAF93315190ULL, 0xE0506BF7C36FCA1BULL, 0x9F3E9B3FF35A4362ULL,
    0xD7EF6F144B456E66ULL, 0xA8819FDC7B70E71FULL, 0x29328E842B2E7C94ULL, 0x565C7E4C1B1BF5EDULL,
    0xB891DEDE5286B4F3ULL, 0xC7FF2E1662B33D8AULL, 0x464C3F4E32EDA601ULL, 0x3922CF8602D82F78ULL,
    0x71F33BADBAD3027CULL, 0x0E9DCB658AE68B05ULL, 0x8F2EDA3DDAF8108EULL, 0xF0402AF5EACD99F7ULL,
    0x3D1B14CF4620B0A7ULL, 0x4275E407763939DEULL, 0xC3C6F55F2667A255ULL, 0xBCA8059716522B2CULL,
    0xF479F1BCAE4D0628ULL, 0x8B1701749E788F51ULL, 0x0AA4102CCE2614DAULL, 0x75CAE0E4FE139DA3ULL,
    0x9B074076B78EDCBDULL, 0xE469B0BE87BB55C4ULL, 0x65DAA1E6D7E5CE4FULL, 0x1AB4512EE7D04736ULL,
    0x5265A5055FCF6A32ULL, 0x2D0B55CD6FFAE34BULL, 0xACB844D33FA478C0ULL, 0xD3D6B41B0F91F1B9ULL,
    0x239626EE05E8684EULL, 0x5CF8D62635DDE137ULL, 0xDD4BC77E65837ABCULL, 0xA22537B655B6F3C5ULL,
    0xEAF4C39DEDA9DEC1ULL, 0x959A3355DD9C57B8ULL, 0x1429220D8DC2CC33ULL, 0x6B47D2C5BDF7454AULL,
    0x858A7257F46A0454ULL, 0xFAE482DCC45F8D2DULL, 0x7B579384947516A6ULL, 0x0439634CA4409FDFULL,
    0x4CE89767115FB2DBULL, 0x338667AF213A3BA2ULL, 0xB23576F77164A029ULL, 0xCD5B863F41512950ULL,
    0x7A36289E8C416A4FULL, 0x0558D856BC74E336ULL, 0x84EBC90EEC2A78BDULL, 0xFB8539C6DC1FF1C4ULL,
    0xB354CDED6414DCC0ULL, 0xCC3A3D25542155B9ULL, 0x4D892C7D047FCE32ULL, 0x32E7DCB5344A474BULL,
    0xDC2A7C277DD70655ULL, 0xA3448CEF4DE28F2CULL, 0x22F79DB71DBC14A7ULL, 0x5D996D7F2D899DDEULL,
    0x154899549596B0DAULL, 0x6A26699CA5A339A3ULL, 0xEB9578C4F5FDA228ULL, 0x94FB880CC5C82B51ULL,
    0x64BB1AF9CFB1B2A6ULL, 0x1BD5EA31FF843BDFULL, 0x9A66FB69AFDAA054ULL, 0xE5080BA19FEF292DULL,
    0xADD9FF8A27F00429ULL, 0xD2B70F4217C58D50ULL, 0x53041E1A479B16DBULL, 0x2C6AEEB277AE9FA2ULL,
    0xC2A74E203E33DEBCULL, 0xBDC9BEE80E0657C5ULL, 0x3C7AAFB05E58CC4EULL, 0x43145F786E6D4537ULL,
    0x0BC5AB53D6726833ULL, 0x74AB5B9BE647E14AULL, 0xF5184AC3B6197AC1ULL, 0x8A76BA0B862CF3B8ULL,
    0x472D84312AC1DAE8ULL, 0x384374F91AF45391ULL, 0xB9F065A14AAAC81AULL, 0xC69E95697A9F4163ULL,
    0x8E4F6142C2806C67ULL, 0xF121918AF2B5E51EULL, 0x709280D2A2EB7E95ULL, 0x0FFC701A92DEF7ECULL,
    0xE131D088DB43B6F2ULL, 0x9E5F2040EB763F8BULL, 0x1FEC3118BB28A400ULL, 0x6082C1D08B1D2D79ULL,
    0x285335FB3310007DULL, 0x573DC53303358904ULL, 0xD68ED46B536B128FULL, 0xA9E024A3635E9BF6ULL,
    0x59A0B65669C70201ULL, 0x26CE469E59F28B78ULL, 0xA77D57C609AC10F3ULL, 0xD813A70E3999998AULL,
    0x90C253258186B48EULL, 0xEFACA3EDB1B33DF7ULL, 0x6E1FB2B5E1EDA67CULL, 0x1171427DD1D82F05ULL,
    0xFFBCE2EF98456E1BULL, 0x80D21227A870E762ULL, 0x0161037FF82E7CE9ULL, 0x7E0FF3B7C81BF590ULL,
    0x36DE079C7004D894ULL, 0x49B0F754401151EDULL, 0xC803E60C104FCA66ULL, 0xB76D16C4207A431FULL,
    0xF46C513D1882D49EULL, 0x8B02A1F528B75DE7ULL, 0x0AB1B0AD78E9C66CULL, 0x75DF406548DC4F15ULL,
    0x3D0EB44EF0C36211ULL, 0x42604486C0F6EB68ULL, 0xC3D355DE90A870E3ULL, 0xBCBDA516A09DF99AULL,
    0x52700584E900B884ULL, 0x2D1EF54CD93531FDULL, 0xACADE414895BAA76ULL, 0xD3C314DCB96E230FULL,
    0x9B12E0F701710E0BULL, 0xE47C103F31448772ULL, 0x65CF0167611A1CF9ULL, 0x1AA1F1AF512F9580ULL,
    0xEAE1635A5B560C77ULL, 0x958F93926B63850EULL, 0x143C82CA3B3D1E85ULL, 0x6B5272020B0897FCULL,
    0x23838629B317BAF8ULL, 0x5CED76E183223381ULL, 0xDD5E67B9D37CA80AULL, 0xA2309771E3492173ULL,
    0x4CFD37E3AAD4606DULL, 0x3393C72B9AE1E914ULL, 0xB220D673CA9F729FULL, 0xCD4E26BBFAAAFBE6ULL,
    0x859FD29042B5D6E2ULL, 0xFAF1225842805F9BULL, 0x7B42330012DEC410ULL, 0x042CC3C822EB4D69ULL,
    0xC977FDF28E066439ULL, 0xB6190D3ABE33ED40ULL, 0x37AA1C62EE6D76CBULL, 0x48C4ECAADE58FFB2ULL,
    0x001518816647D2B6ULL, 0x7F7BE84956745BCFULL, 0xFEC8F911067AC044ULL, 0x81A609D9364F493DULL,
    0x6F6BA94B7FD20823ULL, 0x100559834AE7815AULL, 0x91B648DB1AB91AD1ULL, 0xEED8B8132A8C93A8ULL,
    0xA6094C389293BEACULL, 0xD967BCF0A2A637D5ULL, 0x58D4ADA8F2F8AC5EULL, 0x27BA5D60C2CD2527ULL,
    0xD7FACF95C8B4BCD0ULL, 0xA8943F5DF88135A9ULL, 0x29272E05A8DFAE22ULL, 0x5649DECD98EA275BULL,
    0x1E982AE620F50A5FULL, 0x61F6DA2E10C08326ULL, 0xE045CB76409E18ADULL, 0x9F2B3BBE70AB91D4ULL,
    0x71E69B2C3936D0CAULL, 0x0E886BE4090359B3ULL, 0x8F3B7ABC591DC238ULL, 0xF0558A7469284B41ULL,
    0xB8847E5FD1376645ULL, 0xC7EA8E97E102EF3CULL, 0x46599FCFB15C74B7ULL, 0x39376F078169FDCEULL,
    0x8E5AC1A64C79BE91ULL, 0xF134316E7C4C37E8ULL, 0x708720362C12AC63ULL, 0x0FE9D0FE1C27251AULL,
    0x473824D5A438081EULL, 0x3856D41D940D8167ULL, 0xB9E5C545C4531AECULL, 0xC68B358DF4669395ULL,
    0x2846951FBDFBD28BULL, 0x572865D78DCE5BF2ULL, 0xD69B748FDD90C079ULL, 0xA9F58447EDA54900ULL,
    0xE124706C55BA6404ULL, 0x9E4A80A4658FED7DULL, 0x1FF991FC358176F6ULL, 0x6097613405A4FF8FULL,
    0x90D7F3C10FDD6678ULL, 0xEFB9030905E8EF01ULL, 0x6E0A125155B6748AULL, 0x1164E29965C3FDF3ULL,
    0x59B516B2DDDCD0F7ULL, 0x26DBE67AEDE9598EULL, 0xA768F722BD97C205ULL, 0xD80607EA8DA24B7CULL,
    0x36CBA778C43F0A62ULL, 0x49A557B0F40A831BULL, 0xC81646E8A4541890ULL, 0xB778B620945191E9ULL,
    0xFFA9420B2C4EBCEDULL, 0x80C7B2C31C7B3594ULL, 0x0174A39B4C25AE1FULL, 0x7E1A53537C102766ULL,
    0xB3416D69D0FD0E36ULL, 0xCC2F9DA1E0C8874FULL, 0x4D9C8CF9B0961CC4ULL, 0x32F27C3180A395BDULL,
    0x7A23881A38BCB8B9ULL, 0x054D78D2088931C0ULL, 0x84FE698A58D7AA4BULL, 0xFB90994268E22332ULL,
    0x155D39D0217F622CULL, 0x6A33C91811AAEB55ULL, 0xEB80D84041F470DEULL, 0x94EE288871C1F9A7ULL,
    0xDC3FDC83C9DED4A3ULL, 0xA3512C4BF9EB5DDAULL, 0x22E23D13A9B5C651ULL, 0x5D8CCDDB99804F28ULL,
    0xADCC5F2E93F9D6DFULL, 0xD2A2AFE6A3CC5FA6ULL, 0x5311BEBEF392C42DULL, 0x2C7F4E76C3A74D54ULL,
    0x64AEBA5D7BB86050ULL, 0x1BC04A954B8DE929ULL, 0x9A735BCD1BD372A2ULL, 0xE51DAB052BE6FBDBULL,
    0x0BD00B97627BBAC5ULL, 0x74BEFB5F524E33BCULL, 0xF50DEA070210A837ULL, 0x8A631ACF3225214EULL,
    0xC2B2EEE48A3A0C4AULL, 0xBDDC1E2CBA0F8533ULL, 0x3C6F0F74EA511EB8ULL, 0x4301FFBCDA6497C1ULL
};

#endif
